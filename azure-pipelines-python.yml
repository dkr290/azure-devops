# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
stages:
- stage: Build
  jobs:
  - job: Build_Flask_app

    pool: 'onPremises'
      
    


    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
        addToPath: true
        architecture: 'x64'
        
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install setup
          pip install -r src/flask-app/requirements.txt
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/flask-app$(Build.BuildId).zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/flask-app$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'
# - stage: DeployToDev
#   jobs:
#   - deployment: DeploymentJobDev
#     environment: Development
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: UsePythonVersion@0
#             inputs:
#               versionSpec: '$(pythonVersion)'
#               addToPath: true
#               architecture: 'x64'
#           - task: AzureWebApp@1
#             displayName: 'Deploy Azure Web App : {{ webAppName }}'
#             inputs:
#               azureSubscription: 'FreeOneYear(5f7292bd-e975-43ef-aa61-1871cb2a573d)'
#               appType: 'webAppLinux'
#               appName: '$(webAppName)'
#               package: '$(Pipeline.Workspace)/drop/flask-app$(Build.BuildId).zip'
#               startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 app:app'
    