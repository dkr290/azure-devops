# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:

- stage: Build
  jobs:
  - job: Publish OL7X Template

    pool:
      vmImage: 'ubuntu-latest'

    variables:
      buildConfiguration: 'Release'

    steps:
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)/src/OL7X-VM'
        Contents: '**/*.json'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
- stage: Deploy
  jobs:
  - deployment: DeployOL7XArmTemplate
    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'FreeOneYear(5f7292bd-e975-43ef-aa61-1871cb2a573d)'
              subscriptionId: '5f7292bd-e975-43ef-aa61-1871cb2a573d'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(virtualMachineRG)'
              location: '$(location)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/OL7XInstall.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/OL7XInstall.parameters.json'
              overrideParameters: '-location $(location) -networkInterfaceName $(networkInterfaceName) -subnetName $(subnetName) -virtualNetworkId $(virtualNetworkId) -publicIpAddressName $(publicIpAddressName) -publicIpAddressType $(publicIpAddressType) -publicIpAddressSku $(publicIpAddressSku) -virtualMachineName $(virtualMachineName) -virtualMachineComputerName $(virtualMachineComputerName) -virtualMachineRG $(virtualMachineRG) -osDiskType $(osDiskType) -virtualMachineSize $(virtualMachineSize) -adminUsername $(adminUsername) -adminPassword $(adminPassword) -zone $(zone)'
              deploymentMode: 'Incremental'